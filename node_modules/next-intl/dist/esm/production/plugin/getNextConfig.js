import t from"fs";import n from"path";import{throwError as e}from"./utils.js";function o(t){return[`${t}.ts`,`${t}.tsx`,`${t}.js`,`${t}.jsx`]}function i(i,r){function s(e){return t.existsSync(function(t){const e=[];return r&&e.push(r),e.push(t),n.resolve(...e)}(e))}if(i)return s(i)||e(`Could not find i18n config at ${i}, please provide a valid path.`),i;for(const t of[...o("./i18n/request"),...o("./src/i18n/request")])if(s(t))return t;e("Could not locate request configuration module.\n\nThis path is supported by default: ./(src/)i18n/request.{js,jsx,ts,tsx}\n\nAlternatively, you can specify a custom location in your Next.js config:\n\nconst withNextIntl = createNextIntlPlugin(\n\nAlternatively, you can specify a custom location in your Next.js config:\n\nconst withNextIntl = createNextIntlPlugin(\n  './path/to/i18n/request.tsx'\n);")}function r(t,o){const r={};return null!=process.env.TURBOPACK?(t.requestConfig?.startsWith("/")&&e("Turbopack support for next-intl currently does not support absolute paths, please provide a relative one (e.g. './src/i18n/config.ts').\n\nFound: "+t.requestConfig),r.experimental={...o?.experimental,turbo:{...o?.experimental?.turbo,resolveAlias:{...o?.experimental?.turbo?.resolveAlias,"next-intl/config":i(t.requestConfig)}}}):r.webpack=function(...[e,r]){return e.resolve.alias["next-intl/config"]=n.resolve(e.context,i(t.requestConfig,e.context)),"function"==typeof o?.webpack?o.webpack(e,r):e},r.env={...o?.env,_next_intl_trailing_slash:o?.trailingSlash?"true":void 0},Object.assign({},o,r)}export{r as default};
